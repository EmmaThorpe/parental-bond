<ref *1> Tools {
  log: [
    '|player|p1|opponent|1',
    '|player|p2|ParentalBondBot|0',
    '|gametype|singles',
    '|gen|6',
    '|tier|OU',
    '|split',
    '|seed|',
    '|seed|',
    '|seed|',
    '|seed|24829,9102,52129,36572',
    '|clearpoke',
    '|poke|p2|Seviper, L91, F|item',
    '|poke|p2|Starmie, L82|item',
    '|poke|p2|Seaking, L92, M|item',
    '|poke|p2|Noivern, L82, M|item',
    '|poke|p2|Glalie, L82, M|item',
    '|poke|p2|Jynx, L86, F|item',
    '|rule|Swagger Clause: Swagger is banned',
    "|rule|Baton Pass Clause: Limit one Baton Passer, can't pass Spe and other stats simultaneously",
    '|rule|Sleep Clause Mod: Limit one foe put to sleep',
    '|rule|Species Clause: Limit one of each Pok√©mon',
    '|rule|OHKO Clause: OHKO moves are banned',
    '|rule|Moody Clause: Moody is banned',
    '|rule|Evasion Moves Clause: Evasion moves are banned',
    '|rule|Endless Battle Clause: Forcing endless battles is banned',
    '|rule|HP Percentage Mod: HP is shown in percentages',
    '|message|Battle not started: One of you has an empty team.',
    '|-start|p1a: Haxorus|confusion',
    '|-end|p1a: Haxorus|confusion'
  ],
  sides: [
    BattleSide {
      getChoice: [Function: bound getChoice],
      battle: [Circular *1],
      n: 0,
      name: 'opponent',
      pokemon: [Array],
      active: [Array],
      sideConditions: {},
      isActive: true,
      pokemonLeft: -1,
      faintedLastTurn: false,
      faintedThisTurn: false,
      choiceData: [Object],
      foe: [BattleSide],
      id: 'p1',
      team: [],
      avatar: 1,
      currentRequest: 'move'
    },
    BattleSide {
      getChoice: [Function: bound getChoice],
      battle: [Circular *1],
      n: 1,
      name: 'ParentalBondBot',
      pokemon: [Array],
      active: [Array],
      sideConditions: {},
      isActive: true,
      pokemonLeft: -5,
      faintedLastTurn: false,
      faintedThisTurn: false,
      choiceData: [Object],
      foe: [BattleSide],
      id: 'p2',
      team: [Array],
      currentRequest: 'move'
    }
  ],
  roomid: 'battle-gen6randombattle-2305107532-c2njkqr696d91yjubm1d2kxslfau7jipw',
  id: 'battle-gen6randombattle-2305107532-c2njkqr696d91yjubm1d2kxslfau7jipw',
  rated: false,
  weatherData: { id: '' },
  terrainData: { id: '' },
  pseudoWeather: {
    pokemon: { id: 'pokemon' },
    standard: { id: 'standard' },
    teampreview: { id: 'teampreview' },
    swaggerclause: { id: 'swaggerclause' },
    batonpassclause: { id: 'batonpassclause' },
    sleepclausemod: { id: 'sleepclausemod' },
    speciesclause: { id: 'speciesclause' },
    nicknameclause: { id: 'nicknameclause' },
    ohkoclause: { id: 'ohkoclause' },
    moodyclause: { id: 'moodyclause' },
    evasionmovesclause: { id: 'evasionmovesclause' },
    endlessbattleclause: { id: 'endlessbattleclause' },
    hppercentagemod: { id: 'hppercentagemod' },
    cancelmod: { id: 'cancelmod' }
  },
  format: 'ou',
  formatData: { id: 'ou' },
  effect: { id: '' },
  effectData: { id: '' },
  event: { id: '' },
  gameType: 'singles',
  queue: [],
  faintQueue: [],
  messageLog: [],
  seed: [ 24829, 9102, 52129, 36572 ],
  startingSeed: [ 24829, 9102, 52129, 36572 ],
  p1: <ref *2> BattleSide {
    getChoice: [Function: bound getChoice],
    battle: [Circular *1],
    n: 0,
    name: 'opponent',
    pokemon: [ [BattlePokemon], [BattlePokemon] ],
    active: [ [BattlePokemon] ],
    sideConditions: {},
    isActive: true,
    pokemonLeft: -1,
    faintedLastTurn: false,
    faintedThisTurn: false,
    choiceData: {
      finalDecision: false,
      choices: [],
      decisions: [],
      switchCounters: [Object],
      enterIndices: Set(0) {},
      leaveIndices: Set(0) {},
      skipsIndices: Set(0) {}
    },
    foe: BattleSide {
      getChoice: [Function: bound getChoice],
      battle: [Circular *1],
      n: 1,
      name: 'ParentalBondBot',
      pokemon: [Array],
      active: [Array],
      sideConditions: {},
      isActive: true,
      pokemonLeft: -5,
      faintedLastTurn: false,
      faintedThisTurn: false,
      choiceData: [Object],
      foe: [Circular *2],
      id: 'p2',
      team: [Array],
      currentRequest: 'move'
    },
    id: 'p1',
    team: [],
    avatar: 1,
    currentRequest: 'move'
  },
  p2: <ref *3> BattleSide {
    getChoice: [Function: bound getChoice],
    battle: [Circular *1],
    n: 1,
    name: 'ParentalBondBot',
    pokemon: [
      [BattlePokemon],
      [BattlePokemon],
      [BattlePokemon],
      [BattlePokemon],
      [BattlePokemon],
      [BattlePokemon]
    ],
    active: [ [BattlePokemon] ],
    sideConditions: {},
    isActive: true,
    pokemonLeft: -5,
    faintedLastTurn: false,
    faintedThisTurn: false,
    choiceData: {
      finalDecision: false,
      choices: [],
      decisions: [],
      switchCounters: [Object],
      enterIndices: Set(0) {},
      leaveIndices: Set(0) {},
      skipsIndices: Set(0) {}
    },
    foe: <ref *2> BattleSide {
      getChoice: [Function: bound getChoice],
      battle: [Circular *1],
      n: 0,
      name: 'opponent',
      pokemon: [Array],
      active: [Array],
      sideConditions: {},
      isActive: true,
      pokemonLeft: -1,
      faintedLastTurn: false,
      faintedThisTurn: false,
      choiceData: [Object],
      foe: [Circular *3],
      id: 'p1',
      team: [],
      avatar: 1,
      currentRequest: 'move'
    },
    id: 'p2',
    team: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    currentRequest: 'move'
  },
  isActive: true,
  activeTurns: 0,
  started: true,
  eventDepth: 0,
  reportPercentages: true,
  supportCancel: true,
  me: 1,
  send: [Function: battleSend]
}